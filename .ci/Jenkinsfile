pipeline {
    agent {
        node {
            label 'docker-c5-xlarge'
        }
    }

    options {
        timestamps()
    }

    environment {
        BUILD_IMAGE = "docker.io/shinnengw/cpp-xpx-so-dependencies-build-image:v1.0-bullseye"
    }

    stages {
        stage ('Build') {
            steps {
                echo 'build inside a docker'                
                script {
                    def buildImage = docker.image("${BUILD_IMAGE}")
                    buildImage.inside("-u 0") {
                        sh """
                            echo 'Building'
                            sudo rm -rf _build 
                            mkdir _build 
                            cd _build
                            export BUILD_DIR=\$PWD
                            cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug ..
                            cmake --build \$BUILD_DIR --target StorageClientApp -j\$(nproc)
                            cd ..

                            export LD_LIBRARY_PATH=/opt/qt/\${QT}/gcc_64/lib:\$BUILD_DIR/bin:\$BUILD_DIR/cpp-xpx-chain-sdk:\$BUILD_DIR/cpp-xpx-storage-sdk:/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu
                            cp tool.desktop \$BUILD_DIR/UserApp/
                            /linuxdeployqt/linuxdeployqt-continuous-x86_64.AppImage --appimage-extract-and-run \$BUILD_DIR/UserApp/tool.desktop -verbose=3
                                                                                                      
                            sudo rm -rf storage-tool
                            mkdir storage-tool
                            export DESTDIR=\$PWD/storage-tool
                            
                            cp \$BUILD_DIR/UserApp/StorageClientApp \$DESTDIR
                            cp -r \$BUILD_DIR/UserApp/resources \$DESTDIR
                            cp -r \$BUILD_DIR/lib \$DESTDIR
                            cp -r \$BUILD_DIR/plugins \$DESTDIR
                            cp -a \$BUILD_DIR/bin/boost/. \$DESTDIR/lib/
                            cp -r \$BUILD_DIR/bin/. \$DESTDIR/lib/
                            cp -a \$BUILD_DIR/cpp-xpx-chain-sdk/. \$DESTDIR/lib/
                            rm -r \$DESTDIR/lib/boost
                            rm -r \$DESTDIR/lib/CMakeFiles
                            rm -r \$DESTDIR/lib/xpxchaincpp_autogen
                            cp /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 \$DESTDIR/lib/
                            cp /usr/lib/x86_64-linux-gnu/libssl.so.1.1 \$DESTDIR/lib/
                            cp /usr/lib/x86_64-linux-gnu/libboost_stacktrace_backtrace.so.1.74.0 \$DESTDIR/lib/

                            chmod a+x \$DESTDIR/StorageClientApp
                            patchelf --force-rpath --set-rpath ./lib \$DESTDIR/StorageClientApp
                            
                            tar -Jcvf storage-tool.tar.xz \$DESTDIR
                        """
                    }
                }
            }
            post {
                always {
                    archiveArtifacts "storage-tool.tar.xz"
                }
            }
        }
    }
    
    post {
        failure {
            slackSend channel: '#devops',
              color: 'bad',
              message: "Branch *${env.GIT_BRANCH}* of *${currentBuild.fullDisplayName}* FAILED :scream:"
        }
    }
}